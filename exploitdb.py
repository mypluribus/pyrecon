#!/usr/bin/env python

##
##  DEPENDENCIES
##
##  BeautifulSoup
##
##      http://www.crummy.com/software/BeautifulSoup/
##      download ... decompress
##      python setup.py install
##


class Args(object):
    ##
    ## Argument parser
    ##
    import argparse

    parser = argparse.ArgumentParser(description='Parsing server info using ExploitDB in Python')

    parser.add_argument(
        '--servers',
        metavar='[SERVERS]', 
        dest='servers', 
        nargs=1, 
        required=True,
        default=None,
        help='Servers File to parse'
    ) 

    def print_help(self):
        self.parser.print_help()
        return

    def parse(self):
        args = self.parser.parse_args()
        return args


def parse_exploitdb(servers):
    from bs4 import BeautifulSoup as BS
    import urllib2
    import os

    base_url = 'https://www.exploit-db.com/search/?action=search'

    path = os.path.join(os.getcwd(), servers)
    with open(path, 'r') as f:
        for line in f:

            server = line.strip()

            if not server == '' and not server == 'Unknown':
                num = 1

                for num in range (1,10,1):
                    try:

                        server_filter = '&filter_exploit_text=%s'%server
                        page_filter = '&filter_page=%s'%str(num)
                        url = ''.join([base_url, page_filter, server_filter])

#                        response = urllib2.urlopen('http://www.exploit-db.com/search/?action=search&filter_page=' + str(num) +'&filter_exploit_text=' + server)
                        response = urllib2.urlopen(url)

                        soup = BS(response)
                        rows = soup.findAll('td', {'class': 'list_explot_description'})
                        if len(rows) > 0:
                            for row in rows:
                                ## 
                                ## <server string>:<vulnerability>:<reference>
                                ##
                                print '%s:%s:%s'%(server, row.a.get_text().strip(), row.a.get('href').strip())

                        else:
                            break
                    
                        num += 1
                    except Exception, e:
                        pass



if __name__ == '__main__':

    a = Args()
    args = a.parse()

    if args.servers:
        parse_exploitdb(args.servers[0])


